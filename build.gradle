plugins {
	id "java"
	id "groovy"
	id "jacoco"
	id "findbugs"

	id "com.diffplug.spotless" version "5.8.2"
	id "com.adarshr.test-logger" version "2.1.1"
	id "org.barfuin.gradle.jacocolog" version "1.2.3"
	id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
	id "org.owasp.dependencycheck" version "7.3.0"
}


ext {
	VERSION = "1.6.2"
	GROUP_ID = "com.absmartly.sdk"

	slf4jVersion = "1.7.30"

	jacksonVersion = "2.13.4.2"
	jacksonDataTypeVersion = "2.13.4"

	junitVersion = "5.7.0"
	mockitoVersion = "3.6.28"
}


allprojects {
	group = GROUP_ID

	apply plugin: "java"
	apply plugin: "org.owasp.dependencycheck"
	apply from: rootProject.file("gradle/repositories.gradle")
	apply from: rootProject.file("gradle/spotless.gradle")
	apply from: rootProject.file("gradle/findbugs.gradle")
	apply from: rootProject.file("gradle/test-logger.gradle")
	apply from: rootProject.file("gradle/jacoco.gradle")
	apply from: rootProject.file("gradle/coverage-logger.gradle")

	compileJava {
		sourceCompatibility = "1.6"
		targetCompatibility = "1.6"
	}
}


configure(subprojects.findAll {
	[
		"core-api"
	].contains(it.name)
}) {
	apply plugin: "signing"
	apply plugin: "maven-publish"

	task sourcesJar(type: Jar, dependsOn: classes) {
		archiveClassifier.set('sources')
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		archiveClassifier.set('javadoc')
		from javadoc.destinationDir
	}

	afterEvaluate {
		publishing {
			publications {
				release(MavenPublication) {
					from components.java
					artifact sourcesJar
					artifact javadocJar

					artifactId = project.name
					version = VERSION
					groupId = GROUP_ID

					pom {
						name = "A/B Smartly Java SDK"
						description = "A/B Smartly Java SDK"
						url = "https://www.absmartly.com"
						packaging = "jar"

						licenses {
							license {
								name = "The Apache License, Version 2.0"
								url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
							}
						}

						developers {
							developer {
								id = "absmartly"
								name = "A/B Smartly"
								email = "dev@absmartly.com"
							}
						}

						scm {
							connection = "scm:git:git://github.com/absmartly/java-sdk.git"
							developerConnection = "scm:git:ssh://github.com/absmartly/java-sdk.git"
							url = "https://github.com/absmartly/java-sdk"
						}
					}
				}
			}
		}

		signing {
			useGpgCmd()

			sign publishing.publications.release
		}
	}
}

configure(rootProject) {
	apply plugin: "io.github.gradle-nexus.publish-plugin"

	nexusPublishing {
		repositories {
			Sonatype {
				nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
				snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")

				username = System.getenv('ORG_GRADLE_PROJECT_mavenCentralUsername')
				password = System.getenv('ORG_GRADLE_PROJECT_mavenCentralPassword')
			}
		}
	}
}
